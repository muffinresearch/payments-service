"""
Django settings for payments_service project.

Generated by 'django-admin startproject' using Django 1.8.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

import logging.handlers
import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

SECRET_KEY = 'LOCAL_DEVELOPMENT'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = (
    'rest_framework',
    'payments_service.ui',
    'payments_service.braintree',
    'payments_service.status',
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'payments_service.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'payments_service.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

# This app does not use a database but declaring some settings seems to help
# out a few pesky things.
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': ':memory:',
    }
}


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static path for the app serving the payments UI.

UI_STATIC = '/ui/static/'


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'


REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
    ),
    'DEFAULT_PARSER_CLASSES': (
        'rest_framework.parsers.JSONParser',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        # TODO: replace with Firefox Accounts auth.
        'rest_framework.authentication.SessionAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.AllowAny',
    ),
    'DEFAULT_FILTER_BACKENDS': (
        'rest_framework.filters.DjangoFilterBackend',
    ),
    'PAGINATE_BY': 20,
    'PAGINATE_BY_PARAM': 'limit'
}

SYSLOG_TAG = 'http_app_payments_service'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': {
        'base': {
            '()': 'logging.Formatter',
            'format': '%(name)s:%(levelname)s '
                      '%(message)s :%(pathname)s:%(lineno)s'
        },
    },
    'handlers': {
        'unicodesyslog': {
            '()': 'mozilla_logger.log.UnicodeHandler',
            'facility': logging.handlers.SysLogHandler.LOG_LOCAL7,
            'formatter': 'base',
        },
        'sentry': {
            'level': 'ERROR',
            'class': 'raven.contrib.django.handlers.SentryHandler',
        },
        'console': {
            'level': 'DEBUG',
            '()': logging.StreamHandler,
            'formatter': 'base',
        },
    },
    'loggers': {
        '': {
            'handlers': ['console', 'unicodesyslog'],
            'level': 'INFO',
            'propagate': True,
        },
        'payments_service': {
            'handlers': ['console', 'unicodesyslog', 'sentry'],
            'level': 'INFO',
            'propagate': True,
        },
        'django.request': {
            'handlers': ['console', 'unicodesyslog', 'sentry'],
            'level': 'INFO',
            'propagate': True
        },
    }
}


TEST_RUNNER = 'django_nose.NoseTestSuiteRunner'

NOSE_ARGS = [
    '--logging-clear-handlers',
    '--with-nicedots',
    '--with-blockage',
    '--http-whitelist=""',
]


# URL to private payment processor. https://github.com/mozilla/solitude/
SOLITUDE_URL = os.environ.get('SOLITUDE_URL', 'http://solitude:2602')

# The oAuth key and secret that solitude needs.
SOLITUDE_KEY = 'payments-service'
SOLITUDE_SECRET = 'please change this'
